{
  "configure files": [
    "src/cmake/hana.pc.in",
    "src/doc/Doxyfile.in"
  ],
  "file extension": {
    "configure files": [
      "in"
    ],
    "header files": [
      "h++",
      "hxx",
      "hpp",
      "hh",
      "h"
    ],
    "implementation files": [
      "c++",
      "cxx",
      "cpp",
      "cc",
      "C"
    ]
  },
  "header files": [
    "src/benchmark/measure.hpp",
    "src/example/cppcon_2014/matrix/functor.hpp",
    "src/example/cppcon_2014/matrix/monoid.hpp",
    "src/example/cppcon_2014/matrix/group.hpp",
    "src/example/cppcon_2014/matrix/det.hpp",
    "src/example/cppcon_2014/matrix/matrix.hpp",
    "src/example/cppcon_2014/matrix/ring.hpp",
    "src/example/cppcon_2014/matrix/comparable.hpp",
    "src/include/boost/hana.hpp",
    "src/include/boost/hana/adjust_if.hpp",
    "src/include/boost/hana/prefix.hpp",
    "src/include/boost/hana/remove_if.hpp",
    "src/include/boost/hana/difference.hpp",
    "src/include/boost/hana/pair.hpp",
    "src/include/boost/hana/take_back.hpp",
    "src/include/boost/hana/scan_right.hpp",
    "src/include/boost/hana/ap.hpp",
    "src/include/boost/hana/hash.hpp",
    "src/include/boost/hana/plus.hpp",
    "src/include/boost/hana/any_of.hpp",
    "src/include/boost/hana/insert.hpp",
    "src/include/boost/hana/min.hpp",
    "src/include/boost/hana/zip.hpp",
    "src/include/boost/hana/span.hpp",
    "src/include/boost/hana/product.hpp",
    "src/include/boost/hana/bool.hpp",
    "src/include/boost/hana/eval.hpp",
    "src/include/boost/hana/fold_right.hpp",
    "src/include/boost/hana/at.hpp",
    "src/include/boost/hana/zip_with.hpp",
    "src/include/boost/hana/group.hpp",
    "src/include/boost/hana/extract.hpp",
    "src/include/boost/hana/monadic_fold_left.hpp",
    "src/include/boost/hana/drop_front_exactly.hpp",
    "src/include/boost/hana/type.hpp",
    "src/include/boost/hana/keys.hpp",
    "src/include/boost/hana/size.hpp",
    "src/include/boost/hana/greater.hpp",
    "src/include/boost/hana/maximum.hpp",
    "src/include/boost/hana/then.hpp",
    "src/include/boost/hana/equal.hpp",
    "src/include/boost/hana/members.hpp",
    "src/include/boost/hana/unfold_right.hpp",
    "src/include/boost/hana/negate.hpp",
    "src/include/boost/hana/tap.hpp",
    "src/include/boost/hana/zip_shortest.hpp",
    "src/include/boost/hana/is_disjoint.hpp",
    "src/include/boost/hana/traits.hpp",
    "src/include/boost/hana/map.hpp",
    "src/include/boost/hana/unique.hpp",
    "src/include/boost/hana/power.hpp",
    "src/include/boost/hana/partition.hpp",
    "src/include/boost/hana/transform.hpp",
    "src/include/boost/hana/replace_if.hpp",
    "src/include/boost/hana/duplicate.hpp",
    "src/include/boost/hana/unpack.hpp",
    "src/include/boost/hana/empty.hpp",
    "src/include/boost/hana/cartesian_product.hpp",
    "src/include/boost/hana/chain.hpp",
    "src/include/boost/hana/all.hpp",
    "src/include/boost/hana/and.hpp",
    "src/include/boost/hana/insert_range.hpp",
    "src/include/boost/hana/config.hpp",
    "src/include/boost/hana/tuple.hpp",
    "src/include/boost/hana/value.hpp",
    "src/include/boost/hana/erase_key.hpp",
    "src/include/boost/hana/zero.hpp",
    "src/include/boost/hana/fuse.hpp",
    "src/include/boost/hana/lift.hpp",
    "src/include/boost/hana/fold_left.hpp",
    "src/include/boost/hana/div.hpp",
    "src/include/boost/hana/extend.hpp",
    "src/include/boost/hana/repeat.hpp",
    "src/include/boost/hana/remove_range.hpp",
    "src/include/boost/hana/is_empty.hpp",
    "src/include/boost/hana/functional.hpp",
    "src/include/boost/hana/fold.hpp",
    "src/include/boost/hana/find_if.hpp",
    "src/include/boost/hana/suffix.hpp",
    "src/include/boost/hana/replace.hpp",
    "src/include/boost/hana/version.hpp",
    "src/include/boost/hana/any.hpp",
    "src/include/boost/hana/if.hpp",
    "src/include/boost/hana/slice.hpp",
    "src/include/boost/hana/find.hpp",
    "src/include/boost/hana/fill.hpp",
    "src/include/boost/hana/minus.hpp",
    "src/include/boost/hana/drop_while.hpp",
    "src/include/boost/hana/take_front.hpp",
    "src/include/boost/hana/unfold_left.hpp",
    "src/include/boost/hana/optional.hpp",
    "src/include/boost/hana/set.hpp",
    "src/include/boost/hana/lexicographical_compare.hpp",
    "src/include/boost/hana/mod.hpp",
    "src/include/boost/hana/max.hpp",
    "src/include/boost/hana/assert.hpp",
    "src/include/boost/hana/comparing.hpp",
    "src/include/boost/hana/adapt_adt.hpp",
    "src/include/boost/hana/concept.hpp",
    "src/include/boost/hana/drop_front.hpp",
    "src/include/boost/hana/at_key.hpp",
    "src/include/boost/hana/eval_if.hpp",
    "src/include/boost/hana/take_while.hpp",
    "src/include/boost/hana/string.hpp",
    "src/include/boost/hana/integral_constant.hpp",
    "src/include/boost/hana/second.hpp",
    "src/include/boost/hana/accessors.hpp",
    "src/include/boost/hana/one.hpp",
    "src/include/boost/hana/reverse.hpp",
    "src/include/boost/hana/sort.hpp",
    "src/include/boost/hana/remove.hpp",
    "src/include/boost/hana/less.hpp",
    "src/include/boost/hana/filter.hpp",
    "src/include/boost/hana/ordering.hpp",
    "src/include/boost/hana/remove_at.hpp",
    "src/include/boost/hana/scan_left.hpp",
    "src/include/boost/hana/for_each.hpp",
    "src/include/boost/hana/count.hpp",
    "src/include/boost/hana/replicate.hpp",
    "src/include/boost/hana/less_equal.hpp",
    "src/include/boost/hana/concat.hpp",
    "src/include/boost/hana/union.hpp",
    "src/include/boost/hana/cycle.hpp",
    "src/include/boost/hana/is_subset.hpp",
    "src/include/boost/hana/flatten.hpp",
    "src/include/boost/hana/mult.hpp",
    "src/include/boost/hana/adapt_struct.hpp",
    "src/include/boost/hana/not_equal.hpp",
    "src/include/boost/hana/define_struct.hpp",
    "src/include/boost/hana/minimum.hpp",
    "src/include/boost/hana/monadic_fold_right.hpp",
    "src/include/boost/hana/drop_back.hpp",
    "src/include/boost/hana/permutations.hpp",
    "src/include/boost/hana/or.hpp",
    "src/include/boost/hana/while.hpp",
    "src/include/boost/hana/length.hpp",
    "src/include/boost/hana/intersection.hpp",
    "src/include/boost/hana/none.hpp",
    "src/include/boost/hana/range.hpp",
    "src/include/boost/hana/adjust.hpp",
    "src/include/boost/hana/basic_tuple.hpp",
    "src/include/boost/hana/symmetric_difference.hpp",
    "src/include/boost/hana/monadic_compose.hpp",
    "src/include/boost/hana/none_of.hpp",
    "src/include/boost/hana/sum.hpp",
    "src/include/boost/hana/first.hpp",
    "src/include/boost/hana/all_of.hpp",
    "src/include/boost/hana/front.hpp",
    "src/include/boost/hana/prepend.hpp",
    "src/include/boost/hana/lazy.hpp",
    "src/include/boost/hana/greater_equal.hpp",
    "src/include/boost/hana/reverse_fold.hpp",
    "src/include/boost/hana/back.hpp",
    "src/include/boost/hana/zip_shortest_with.hpp",
    "src/include/boost/hana/core.hpp",
    "src/include/boost/hana/append.hpp",
    "src/include/boost/hana/not.hpp",
    "src/include/boost/hana/count_if.hpp",
    "src/include/boost/hana/intersperse.hpp",
    "src/include/boost/hana/contains.hpp",
    "src/include/boost/hana/fwd/adjust_if.hpp",
    "src/include/boost/hana/fwd/prefix.hpp",
    "src/include/boost/hana/fwd/remove_if.hpp",
    "src/include/boost/hana/fwd/difference.hpp",
    "src/include/boost/hana/fwd/pair.hpp",
    "src/include/boost/hana/fwd/take_back.hpp",
    "src/include/boost/hana/fwd/scan_right.hpp",
    "src/include/boost/hana/fwd/ap.hpp",
    "src/include/boost/hana/fwd/hash.hpp",
    "src/include/boost/hana/fwd/plus.hpp",
    "src/include/boost/hana/fwd/any_of.hpp",
    "src/include/boost/hana/fwd/insert.hpp",
    "src/include/boost/hana/fwd/min.hpp",
    "src/include/boost/hana/fwd/zip.hpp",
    "src/include/boost/hana/fwd/span.hpp",
    "src/include/boost/hana/fwd/product.hpp",
    "src/include/boost/hana/fwd/bool.hpp",
    "src/include/boost/hana/fwd/eval.hpp",
    "src/include/boost/hana/fwd/fold_right.hpp",
    "src/include/boost/hana/fwd/at.hpp",
    "src/include/boost/hana/fwd/zip_with.hpp",
    "src/include/boost/hana/fwd/group.hpp",
    "src/include/boost/hana/fwd/extract.hpp",
    "src/include/boost/hana/fwd/monadic_fold_left.hpp",
    "src/include/boost/hana/fwd/drop_front_exactly.hpp",
    "src/include/boost/hana/fwd/type.hpp",
    "src/include/boost/hana/fwd/keys.hpp",
    "src/include/boost/hana/fwd/size.hpp",
    "src/include/boost/hana/fwd/greater.hpp",
    "src/include/boost/hana/fwd/maximum.hpp",
    "src/include/boost/hana/fwd/then.hpp",
    "src/include/boost/hana/fwd/equal.hpp",
    "src/include/boost/hana/fwd/members.hpp",
    "src/include/boost/hana/fwd/unfold_right.hpp",
    "src/include/boost/hana/fwd/negate.hpp",
    "src/include/boost/hana/fwd/tap.hpp",
    "src/include/boost/hana/fwd/zip_shortest.hpp",
    "src/include/boost/hana/fwd/is_disjoint.hpp",
    "src/include/boost/hana/fwd/map.hpp",
    "src/include/boost/hana/fwd/unique.hpp",
    "src/include/boost/hana/fwd/power.hpp",
    "src/include/boost/hana/fwd/partition.hpp",
    "src/include/boost/hana/fwd/transform.hpp",
    "src/include/boost/hana/fwd/replace_if.hpp",
    "src/include/boost/hana/fwd/duplicate.hpp",
    "src/include/boost/hana/fwd/unpack.hpp",
    "src/include/boost/hana/fwd/empty.hpp",
    "src/include/boost/hana/fwd/cartesian_product.hpp",
    "src/include/boost/hana/fwd/chain.hpp",
    "src/include/boost/hana/fwd/all.hpp",
    "src/include/boost/hana/fwd/and.hpp",
    "src/include/boost/hana/fwd/insert_range.hpp",
    "src/include/boost/hana/fwd/tuple.hpp",
    "src/include/boost/hana/fwd/value.hpp",
    "src/include/boost/hana/fwd/erase_key.hpp",
    "src/include/boost/hana/fwd/zero.hpp",
    "src/include/boost/hana/fwd/fuse.hpp",
    "src/include/boost/hana/fwd/lift.hpp",
    "src/include/boost/hana/fwd/fold_left.hpp",
    "src/include/boost/hana/fwd/div.hpp",
    "src/include/boost/hana/fwd/extend.hpp",
    "src/include/boost/hana/fwd/repeat.hpp",
    "src/include/boost/hana/fwd/remove_range.hpp",
    "src/include/boost/hana/fwd/is_empty.hpp",
    "src/include/boost/hana/fwd/fold.hpp",
    "src/include/boost/hana/fwd/find_if.hpp",
    "src/include/boost/hana/fwd/suffix.hpp",
    "src/include/boost/hana/fwd/replace.hpp",
    "src/include/boost/hana/fwd/any.hpp",
    "src/include/boost/hana/fwd/if.hpp",
    "src/include/boost/hana/fwd/slice.hpp",
    "src/include/boost/hana/fwd/find.hpp",
    "src/include/boost/hana/fwd/fill.hpp",
    "src/include/boost/hana/fwd/minus.hpp",
    "src/include/boost/hana/fwd/drop_while.hpp",
    "src/include/boost/hana/fwd/take_front.hpp",
    "src/include/boost/hana/fwd/unfold_left.hpp",
    "src/include/boost/hana/fwd/optional.hpp",
    "src/include/boost/hana/fwd/set.hpp",
    "src/include/boost/hana/fwd/lexicographical_compare.hpp",
    "src/include/boost/hana/fwd/mod.hpp",
    "src/include/boost/hana/fwd/max.hpp",
    "src/include/boost/hana/fwd/comparing.hpp",
    "src/include/boost/hana/fwd/adapt_adt.hpp",
    "src/include/boost/hana/fwd/drop_front.hpp",
    "src/include/boost/hana/fwd/at_key.hpp",
    "src/include/boost/hana/fwd/eval_if.hpp",
    "src/include/boost/hana/fwd/take_while.hpp",
    "src/include/boost/hana/fwd/string.hpp",
    "src/include/boost/hana/fwd/integral_constant.hpp",
    "src/include/boost/hana/fwd/second.hpp",
    "src/include/boost/hana/fwd/accessors.hpp",
    "src/include/boost/hana/fwd/one.hpp",
    "src/include/boost/hana/fwd/reverse.hpp",
    "src/include/boost/hana/fwd/sort.hpp",
    "src/include/boost/hana/fwd/remove.hpp",
    "src/include/boost/hana/fwd/less.hpp",
    "src/include/boost/hana/fwd/filter.hpp",
    "src/include/boost/hana/fwd/ordering.hpp",
    "src/include/boost/hana/fwd/remove_at.hpp",
    "src/include/boost/hana/fwd/scan_left.hpp",
    "src/include/boost/hana/fwd/for_each.hpp",
    "src/include/boost/hana/fwd/count.hpp",
    "src/include/boost/hana/fwd/replicate.hpp",
    "src/include/boost/hana/fwd/less_equal.hpp",
    "src/include/boost/hana/fwd/concat.hpp",
    "src/include/boost/hana/fwd/union.hpp",
    "src/include/boost/hana/fwd/cycle.hpp",
    "src/include/boost/hana/fwd/is_subset.hpp",
    "src/include/boost/hana/fwd/flatten.hpp",
    "src/include/boost/hana/fwd/mult.hpp",
    "src/include/boost/hana/fwd/adapt_struct.hpp",
    "src/include/boost/hana/fwd/not_equal.hpp",
    "src/include/boost/hana/fwd/define_struct.hpp",
    "src/include/boost/hana/fwd/minimum.hpp",
    "src/include/boost/hana/fwd/monadic_fold_right.hpp",
    "src/include/boost/hana/fwd/drop_back.hpp",
    "src/include/boost/hana/fwd/permutations.hpp",
    "src/include/boost/hana/fwd/or.hpp",
    "src/include/boost/hana/fwd/while.hpp",
    "src/include/boost/hana/fwd/length.hpp",
    "src/include/boost/hana/fwd/intersection.hpp",
    "src/include/boost/hana/fwd/none.hpp",
    "src/include/boost/hana/fwd/range.hpp",
    "src/include/boost/hana/fwd/adjust.hpp",
    "src/include/boost/hana/fwd/basic_tuple.hpp",
    "src/include/boost/hana/fwd/symmetric_difference.hpp",
    "src/include/boost/hana/fwd/monadic_compose.hpp",
    "src/include/boost/hana/fwd/none_of.hpp",
    "src/include/boost/hana/fwd/sum.hpp",
    "src/include/boost/hana/fwd/first.hpp",
    "src/include/boost/hana/fwd/all_of.hpp",
    "src/include/boost/hana/fwd/front.hpp",
    "src/include/boost/hana/fwd/prepend.hpp",
    "src/include/boost/hana/fwd/lazy.hpp",
    "src/include/boost/hana/fwd/greater_equal.hpp",
    "src/include/boost/hana/fwd/reverse_fold.hpp",
    "src/include/boost/hana/fwd/back.hpp",
    "src/include/boost/hana/fwd/zip_shortest_with.hpp",
    "src/include/boost/hana/fwd/core.hpp",
    "src/include/boost/hana/fwd/append.hpp",
    "src/include/boost/hana/fwd/not.hpp",
    "src/include/boost/hana/fwd/count_if.hpp",
    "src/include/boost/hana/fwd/intersperse.hpp",
    "src/include/boost/hana/fwd/contains.hpp",
    "src/include/boost/hana/fwd/core/is_a.hpp",
    "src/include/boost/hana/fwd/core/make.hpp",
    "src/include/boost/hana/fwd/core/when.hpp",
    "src/include/boost/hana/fwd/core/to.hpp",
    "src/include/boost/hana/fwd/core/common.hpp",
    "src/include/boost/hana/fwd/core/tag_of.hpp",
    "src/include/boost/hana/fwd/core/default.hpp",
    "src/include/boost/hana/fwd/concept/functor.hpp",
    "src/include/boost/hana/fwd/concept/constant.hpp",
    "src/include/boost/hana/fwd/concept/logical.hpp",
    "src/include/boost/hana/fwd/concept/monoid.hpp",
    "src/include/boost/hana/fwd/concept/product.hpp",
    "src/include/boost/hana/fwd/concept/group.hpp",
    "src/include/boost/hana/fwd/concept/searchable.hpp",
    "src/include/boost/hana/fwd/concept/hashable.hpp",
    "src/include/boost/hana/fwd/concept/sequence.hpp",
    "src/include/boost/hana/fwd/concept/euclidean_ring.hpp",
    "src/include/boost/hana/fwd/concept/ring.hpp",
    "src/include/boost/hana/fwd/concept/integral_constant.hpp",
    "src/include/boost/hana/fwd/concept/iterable.hpp",
    "src/include/boost/hana/fwd/concept/comonad.hpp",
    "src/include/boost/hana/fwd/concept/orderable.hpp",
    "src/include/boost/hana/fwd/concept/struct.hpp",
    "src/include/boost/hana/fwd/concept/metafunction.hpp",
    "src/include/boost/hana/fwd/concept/foldable.hpp",
    "src/include/boost/hana/fwd/concept/applicative.hpp",
    "src/include/boost/hana/fwd/concept/monad_plus.hpp",
    "src/include/boost/hana/fwd/concept/comparable.hpp",
    "src/include/boost/hana/fwd/concept/monad.hpp",
    "src/include/boost/hana/experimental/type_name.hpp",
    "src/include/boost/hana/experimental/printable.hpp",
    "src/include/boost/hana/experimental/view.hpp",
    "src/include/boost/hana/experimental/types.hpp",
    "src/include/boost/hana/core/dispatch.hpp",
    "src/include/boost/hana/core/is_a.hpp",
    "src/include/boost/hana/core/make.hpp",
    "src/include/boost/hana/core/when.hpp",
    "src/include/boost/hana/core/to.hpp",
    "src/include/boost/hana/core/common.hpp",
    "src/include/boost/hana/core/tag_of.hpp",
    "src/include/boost/hana/core/default.hpp",
    "src/include/boost/hana/ext/std.hpp",
    "src/include/boost/hana/ext/boost.hpp",
    "src/include/boost/hana/ext/boost/mpl.hpp",
    "src/include/boost/hana/ext/boost/tuple.hpp",
    "src/include/boost/hana/ext/boost/fusion.hpp",
    "src/include/boost/hana/ext/boost/fusion/vector.hpp",
    "src/include/boost/hana/ext/boost/fusion/tuple.hpp",
    "src/include/boost/hana/ext/boost/fusion/list.hpp",
    "src/include/boost/hana/ext/boost/fusion/deque.hpp",
    "src/include/boost/hana/ext/boost/fusion/detail/common.hpp",
    "src/include/boost/hana/ext/boost/mpl/integral_c.hpp",
    "src/include/boost/hana/ext/boost/mpl/vector.hpp",
    "src/include/boost/hana/ext/boost/mpl/list.hpp",
    "src/include/boost/hana/ext/std/pair.hpp",
    "src/include/boost/hana/ext/std/array.hpp",
    "src/include/boost/hana/ext/std/vector.hpp",
    "src/include/boost/hana/ext/std/tuple.hpp",
    "src/include/boost/hana/ext/std/ratio.hpp",
    "src/include/boost/hana/ext/std/integral_constant.hpp",
    "src/include/boost/hana/ext/std/integer_sequence.hpp",
    "src/include/boost/hana/detail/concepts.hpp",
    "src/include/boost/hana/detail/any_of.hpp",
    "src/include/boost/hana/detail/wrong.hpp",
    "src/include/boost/hana/detail/nested_by.hpp",
    "src/include/boost/hana/detail/type_at.hpp",
    "src/include/boost/hana/detail/array.hpp",
    "src/include/boost/hana/detail/intrinsics.hpp",
    "src/include/boost/hana/detail/struct_macros.erb.hpp",
    "src/include/boost/hana/detail/index_if.hpp",
    "src/include/boost/hana/detail/algorithm.hpp",
    "src/include/boost/hana/detail/create.hpp",
    "src/include/boost/hana/detail/nested_to_fwd.hpp",
    "src/include/boost/hana/detail/fast_and.hpp",
    "src/include/boost/hana/detail/has_duplicates.hpp",
    "src/include/boost/hana/detail/nested_than.hpp",
    "src/include/boost/hana/detail/canonical_constant.hpp",
    "src/include/boost/hana/detail/hash_table.hpp",
    "src/include/boost/hana/detail/type_foldr1.hpp",
    "src/include/boost/hana/detail/nested_by_fwd.hpp",
    "src/include/boost/hana/detail/ebo.hpp",
    "src/include/boost/hana/detail/first_unsatisfied_index.hpp",
    "src/include/boost/hana/detail/nested_than_fwd.hpp",
    "src/include/boost/hana/detail/integral_constant.hpp",
    "src/include/boost/hana/detail/dispatch_if.hpp",
    "src/include/boost/hana/detail/void_t.hpp",
    "src/include/boost/hana/detail/has_common_embedding.hpp",
    "src/include/boost/hana/detail/decay.hpp",
    "src/include/boost/hana/detail/std_common_type.hpp",
    "src/include/boost/hana/detail/nested_to.hpp",
    "src/include/boost/hana/detail/preprocessor.hpp",
    "src/include/boost/hana/detail/unpack_flatten.hpp",
    "src/include/boost/hana/detail/type_foldl1.hpp",
    "src/include/boost/hana/detail/struct_macros.hpp",
    "src/include/boost/hana/detail/operators/logical.hpp",
    "src/include/boost/hana/detail/operators/searchable.hpp",
    "src/include/boost/hana/detail/operators/arithmetic.hpp",
    "src/include/boost/hana/detail/operators/iterable.hpp",
    "src/include/boost/hana/detail/operators/orderable.hpp",
    "src/include/boost/hana/detail/operators/adl.hpp",
    "src/include/boost/hana/detail/operators/comparable.hpp",
    "src/include/boost/hana/detail/operators/monad.hpp",
    "src/include/boost/hana/detail/variadic/split_at.hpp",
    "src/include/boost/hana/detail/variadic/at.hpp",
    "src/include/boost/hana/detail/variadic/foldl1.hpp",
    "src/include/boost/hana/detail/variadic/drop_into.hpp",
    "src/include/boost/hana/detail/variadic/foldr1.hpp",
    "src/include/boost/hana/detail/variadic/reverse_apply.hpp",
    "src/include/boost/hana/detail/variadic/take.hpp",
    "src/include/boost/hana/detail/variadic/reverse_apply/unrolled.hpp",
    "src/include/boost/hana/detail/variadic/reverse_apply/flat.hpp",
    "src/include/boost/hana/concept/functor.hpp",
    "src/include/boost/hana/concept/constant.hpp",
    "src/include/boost/hana/concept/logical.hpp",
    "src/include/boost/hana/concept/monoid.hpp",
    "src/include/boost/hana/concept/product.hpp",
    "src/include/boost/hana/concept/group.hpp",
    "src/include/boost/hana/concept/searchable.hpp",
    "src/include/boost/hana/concept/hashable.hpp",
    "src/include/boost/hana/concept/sequence.hpp",
    "src/include/boost/hana/concept/euclidean_ring.hpp",
    "src/include/boost/hana/concept/ring.hpp",
    "src/include/boost/hana/concept/integral_constant.hpp",
    "src/include/boost/hana/concept/iterable.hpp",
    "src/include/boost/hana/concept/comonad.hpp",
    "src/include/boost/hana/concept/orderable.hpp",
    "src/include/boost/hana/concept/struct.hpp",
    "src/include/boost/hana/concept/metafunction.hpp",
    "src/include/boost/hana/concept/foldable.hpp",
    "src/include/boost/hana/concept/applicative.hpp",
    "src/include/boost/hana/concept/monad_plus.hpp",
    "src/include/boost/hana/concept/comparable.hpp",
    "src/include/boost/hana/concept/monad.hpp",
    "src/include/boost/hana/functional/on.hpp",
    "src/include/boost/hana/functional/demux.hpp",
    "src/include/boost/hana/functional/compose.hpp",
    "src/include/boost/hana/functional/infix.hpp",
    "src/include/boost/hana/functional/iterate.hpp",
    "src/include/boost/hana/functional/apply.hpp",
    "src/include/boost/hana/functional/partial.hpp",
    "src/include/boost/hana/functional/flip.hpp",
    "src/include/boost/hana/functional/lockstep.hpp",
    "src/include/boost/hana/functional/overload_linearly.hpp",
    "src/include/boost/hana/functional/id.hpp",
    "src/include/boost/hana/functional/fix.hpp",
    "src/include/boost/hana/functional/placeholder.hpp",
    "src/include/boost/hana/functional/curry.hpp",
    "src/include/boost/hana/functional/capture.hpp",
    "src/include/boost/hana/functional/always.hpp",
    "src/include/boost/hana/functional/arg.hpp",
    "src/include/boost/hana/functional/reverse_partial.hpp",
    "src/include/boost/hana/functional/overload.hpp",
    "src/doc/tutorial.hpp"
  ],
  "ignore pattern": "$^",
  "implementation files": [
    "src/benchmark/find_if/compile.mpl.vector.erb.cpp",
    "src/benchmark/find_if/compile.hana.tuple.erb.cpp",
    "src/benchmark/find_if/compile.std.integer_sequence.erb.cpp",
    "src/benchmark/find_if/compile.meta.list.erb.cpp",
    "src/benchmark/find_if/compile.fusion.vector.erb.cpp",
    "src/benchmark/find_if/compile.hana.set.erb.cpp",
    "src/benchmark/find_if/compile.fusion.list.erb.cpp",
    "src/benchmark/find_if/compile.hana.map.erb.cpp",
    "src/benchmark/reverse/nomove.fusion.vector.erb.cpp",
    "src/benchmark/reverse/nomove.hana.tuple.erb.cpp",
    "src/benchmark/reverse/move.fusion.vector.erb.cpp",
    "src/benchmark/reverse/move.hana.tuple.erb.cpp",
    "src/benchmark/make/compile.mpl.vector.erb.cpp",
    "src/benchmark/make/compile.hana.tuple.erb.cpp",
    "src/benchmark/make/compile.hana.basic_tuple.erb.cpp",
    "src/benchmark/make/compile.std.array.erb.cpp",
    "src/benchmark/make/compile.mpl11.list.erb.cpp",
    "src/benchmark/make/compile.meta.list.erb.cpp",
    "src/benchmark/make/compile.fusion.vector.erb.cpp",
    "src/benchmark/make/compile.fusion.list.erb.cpp",
    "src/benchmark/make/compile.std.tuple.erb.cpp",
    "src/benchmark/fold_left/compile.mpl.vector.erb.cpp",
    "src/benchmark/fold_left/compile.hana.tuple.erb.cpp",
    "src/benchmark/fold_left/execute.fusion.list.erb.cpp",
    "src/benchmark/fold_left/compile.hana.basic_tuple.erb.cpp",
    "src/benchmark/fold_left/execute.fusion.vector.erb.cpp",
    "src/benchmark/fold_left/compile.mpl11.list.erb.cpp",
    "src/benchmark/fold_left/execute.std.vector.erb.cpp",
    "src/benchmark/fold_left/compile.meta.list.erb.cpp",
    "src/benchmark/fold_left/compile.fusion.vector.erb.cpp",
    "src/benchmark/fold_left/execute.std.array.erb.cpp",
    "src/benchmark/fold_left/compile.cexpr.recursive.erb.cpp",
    "src/benchmark/fold_left/compile.cexpr.unrolled.erb.cpp",
    "src/benchmark/fold_left/compile.fusion.list.erb.cpp",
    "src/benchmark/fold_left/execute.hana.tuple.erb.cpp",
    "src/benchmark/including/baseline.erb.cpp",
    "src/benchmark/including/mpl11.erb.cpp",
    "src/benchmark/including/hana.erb.cpp",
    "src/benchmark/including/fusion.erb.cpp",
    "src/benchmark/including/meta.erb.cpp",
    "src/benchmark/including/mpl.erb.cpp",
    "src/benchmark/transform/compile.mpl.vector.erb.cpp",
    "src/benchmark/transform/compile.hana.tuple.erb.cpp",
    "src/benchmark/transform/execute.fusion.list.erb.cpp",
    "src/benchmark/transform/execute.fusion.vector.erb.cpp",
    "src/benchmark/transform/compile.mpl11.list.erb.cpp",
    "src/benchmark/transform/execute.std.vector.erb.cpp",
    "src/benchmark/transform/compile.meta.list.erb.cpp",
    "src/benchmark/transform/compile.fusion.vector.erb.cpp",
    "src/benchmark/transform/compile.hana.types.erb.cpp",
    "src/benchmark/transform/execute.std.array.erb.cpp",
    "src/benchmark/transform/compile.fusion.list.erb.cpp",
    "src/benchmark/transform/execute.hana.tuple.erb.cpp",
    "src/example/flatten.cpp",
    "src/example/adapt_struct.cpp",
    "src/example/mult.cpp",
    "src/example/union.cpp",
    "src/example/cycle.cpp",
    "src/example/is_subset.cpp",
    "src/example/not_equal.cpp",
    "src/example/drop_back.cpp",
    "src/example/define_struct.cpp",
    "src/example/monadic_fold_right.cpp",
    "src/example/minimum.cpp",
    "src/example/permutations.cpp",
    "src/example/intersection.cpp",
    "src/example/or.cpp",
    "src/example/remove_range_c.cpp",
    "src/example/length.cpp",
    "src/example/while.cpp",
    "src/example/none.cpp",
    "src/example/adjust.cpp",
    "src/example/monadic_compose.cpp",
    "src/example/none_of.cpp",
    "src/example/sum.cpp",
    "src/example/symmetric_difference.cpp",
    "src/example/first.cpp",
    "src/example/all_of.cpp",
    "src/example/prepend.cpp",
    "src/example/front.cpp",
    "src/example/back.cpp",
    "src/example/reverse_fold.cpp",
    "src/example/zip_shortest_with.cpp",
    "src/example/greater_equal.cpp",
    "src/example/append.cpp",
    "src/example/maximum_by.cpp",
    "src/example/contains.cpp",
    "src/example/count_if.cpp",
    "src/example/intersperse.cpp",
    "src/example/not.cpp",
    "src/example/find_if.cpp",
    "src/example/version.cpp",
    "src/example/replace.cpp",
    "src/example/suffix.cpp",
    "src/example/any.cpp",
    "src/example/if.cpp",
    "src/example/fill.cpp",
    "src/example/slice.cpp",
    "src/example/find.cpp",
    "src/example/minus.cpp",
    "src/example/take_front.cpp",
    "src/example/unfold_left.cpp",
    "src/example/struct.mcd.nested.cpp",
    "src/example/drop_while.cpp",
    "src/example/struct.custom_accessor.cpp",
    "src/example/value_of.cpp",
    "src/example/lexicographical_compare.cpp",
    "src/example/mod.cpp",
    "src/example/max.cpp",
    "src/example/comparing.cpp",
    "src/example/adapt_adt.cpp",
    "src/example/take_while.cpp",
    "src/example/drop_front.cpp",
    "src/example/eval_if.cpp",
    "src/example/at_key.cpp",
    "src/example/second.cpp",
    "src/example/accessors.cpp",
    "src/example/integral_constant.cpp",
    "src/example/remove.cpp",
    "src/example/sort.cpp",
    "src/example/reverse.cpp",
    "src/example/one.cpp",
    "src/example/remove_at.cpp",
    "src/example/ordering.cpp",
    "src/example/less.cpp",
    "src/example/filter.cpp",
    "src/example/replicate.cpp",
    "src/example/for_each.cpp",
    "src/example/count.cpp",
    "src/example/scan_left.cpp",
    "src/example/concat.cpp",
    "src/example/less_equal.cpp",
    "src/example/equal.cpp",
    "src/example/unfold_right.cpp",
    "src/example/members.cpp",
    "src/example/overview.cpp",
    "src/example/negate.cpp",
    "src/example/zip_shortest.cpp",
    "src/example/tap.cpp",
    "src/example/is_disjoint.cpp",
    "src/example/power.cpp",
    "src/example/unique.cpp",
    "src/example/partition.cpp",
    "src/example/replace_if.cpp",
    "src/example/duplicate.cpp",
    "src/example/transform.cpp",
    "src/example/unpack.cpp",
    "src/example/chain.cpp",
    "src/example/and.cpp",
    "src/example/in.cpp",
    "src/example/all.cpp",
    "src/example/cartesian_product.cpp",
    "src/example/empty.cpp",
    "src/example/value.cpp",
    "src/example/insert_range.cpp",
    "src/example/slice_c.cpp",
    "src/example/lift.cpp",
    "src/example/fold_left.cpp",
    "src/example/fuse.cpp",
    "src/example/zero.cpp",
    "src/example/extend.cpp",
    "src/example/div.cpp",
    "src/example/minimum_by.cpp",
    "src/example/remove_range.cpp",
    "src/example/repeat.cpp",
    "src/example/is_empty.cpp",
    "src/example/fold.cpp",
    "src/example/adjust_if.cpp",
    "src/example/prefix.cpp",
    "src/example/remove_at_c.cpp",
    "src/example/take_front_c.cpp",
    "src/example/difference.cpp",
    "src/example/remove_if.cpp",
    "src/example/scan_right.cpp",
    "src/example/take_back.cpp",
    "src/example/hash.cpp",
    "src/example/ap.cpp",
    "src/example/plus.cpp",
    "src/example/insert.cpp",
    "src/example/any_of.cpp",
    "src/example/struct.mcd.tag_dispatching.cpp",
    "src/example/min.cpp",
    "src/example/zip.cpp",
    "src/example/at_c.cpp",
    "src/example/wandbox.cpp",
    "src/example/product.cpp",
    "src/example/span.cpp",
    "src/example/at.cpp",
    "src/example/fold_right.cpp",
    "src/example/eval.cpp",
    "src/example/group.cpp",
    "src/example/extract.cpp",
    "src/example/drop_front_exactly.cpp",
    "src/example/monadic_fold_left.cpp",
    "src/example/zip_with.cpp",
    "src/example/size.cpp",
    "src/example/greater.cpp",
    "src/example/then.cpp",
    "src/example/maximum.cpp",
    "src/example/misc/lambda_tuple.cpp",
    "src/example/misc/nth.cpp",
    "src/example/misc/printf.cpp",
    "src/example/misc/indexed_sort.cpp",
    "src/example/misc/overload_linearly.cpp",
    "src/example/misc/infinite_list.cpp",
    "src/example/misc/restricted_function.cpp",
    "src/example/misc/ref_tuple.cpp",
    "src/example/misc/tree.cpp",
    "src/example/misc/infinite_set.cpp",
    "src/example/misc/from_json.cpp",
    "src/example/tutorial/include_ext.cpp",
    "src/example/tutorial/algorithms.cpp",
    "src/example/tutorial/introduction.cpp",
    "src/example/tutorial/integral-branching.cpp",
    "src/example/tutorial/integral.cpp",
    "src/example/tutorial/introspection.adapt.cpp",
    "src/example/tutorial/containers.cpp",
    "src/example/tutorial/quickstart.cpp",
    "src/example/tutorial/mpl_cheatsheet.cpp",
    "src/example/tutorial/introspection.cpp",
    "src/example/tutorial/quickstart.switchAny.cpp",
    "src/example/tutorial/appendix_mpl.cpp",
    "src/example/tutorial/tag_dispatching.cpp",
    "src/example/tutorial/introspection.sfinae.cpp",
    "src/example/tutorial/introspection.json.cpp",
    "src/example/tutorial/concepts.cpp",
    "src/example/tutorial/constant_side_effects.cpp",
    "src/example/tutorial/rationale.container.cpp",
    "src/example/tutorial/type.cpp",
    "src/example/tutorial/ext/fusion_to_hana.cpp",
    "src/example/tutorial/ext/ratio_plus.cpp",
    "src/example/tutorial/ext/mpl_vector.cpp",
    "src/example/iterable/searchable.cpp",
    "src/example/core/tag_of.cpp",
    "src/example/core/default.cpp",
    "src/example/core/when.cpp",
    "src/example/core/when_valid.cpp",
    "src/example/core/tag_of_t.cpp",
    "src/example/core/is_a.cpp",
    "src/example/core/make.cpp",
    "src/example/core/common/common.cpp",
    "src/example/core/common/common_t.cpp",
    "src/example/core/common/has_common.cpp",
    "src/example/core/convert/to.cpp",
    "src/example/core/convert/embedding.cpp",
    "src/example/core/convert/is_convertible.cpp",
    "src/example/core/convert/is_embedded.cpp",
    "src/example/foldable/to.cpp",
    "src/example/tuple/foldable.cpp",
    "src/example/tuple/interop.cpp",
    "src/example/tuple/tuple.cpp",
    "src/example/tuple/tuple_t.cpp",
    "src/example/tuple/tuple_c.cpp",
    "src/example/tuple/make.cpp",
    "src/example/ext/boost/tuple.cpp",
    "src/example/ext/boost/fusion/deque.cpp",
    "src/example/ext/boost/fusion/vector.cpp",
    "src/example/ext/boost/fusion/tuple.cpp",
    "src/example/ext/boost/fusion/list.cpp",
    "src/example/ext/boost/mpl/integral_c/integral_constant.cpp",
    "src/example/ext/boost/mpl/list/foldable.cpp",
    "src/example/ext/boost/mpl/list/comparable.cpp",
    "src/example/ext/boost/mpl/list/iterable.cpp",
    "src/example/ext/boost/mpl/list/conversion.cpp",
    "src/example/ext/boost/mpl/list/searchable.cpp",
    "src/example/ext/boost/mpl/vector/foldable.cpp",
    "src/example/ext/boost/mpl/vector/comparable.cpp",
    "src/example/ext/boost/mpl/vector/iterable.cpp",
    "src/example/ext/boost/mpl/vector/conversion.cpp",
    "src/example/ext/boost/mpl/vector/searchable.cpp",
    "src/example/ext/std/integral_constant.cpp",
    "src/example/ext/std/tuple.cpp",
    "src/example/ext/std/pair.cpp",
    "src/example/ext/std/array/orderable.cpp",
    "src/example/ext/std/array/foldable.cpp",
    "src/example/ext/std/array/comparable.cpp",
    "src/example/ext/std/array/iterable.cpp",
    "src/example/ext/std/integer_sequence/foldable.cpp",
    "src/example/ext/std/integer_sequence/comparable.cpp",
    "src/example/ext/std/integer_sequence/iterable.cpp",
    "src/example/ext/std/integer_sequence/searchable.cpp",
    "src/example/ext/std/ratio/orderable.cpp",
    "src/example/ext/std/ratio/comparable.cpp",
    "src/example/ext/std/ratio/arithmetic.cpp",
    "src/example/product/comparable.cpp",
    "src/example/product/make.cpp",
    "src/example/struct/foldable.cpp",
    "src/example/struct/to.cpp",
    "src/example/struct/comparable.cpp",
    "src/example/struct/keys.cpp",
    "src/example/struct/searchable.cpp",
    "src/example/optional/orderable.cpp",
    "src/example/optional/foldable.cpp",
    "src/example/optional/maybe.cpp",
    "src/example/optional/applicative.cpp",
    "src/example/optional/monad_plus.cpp",
    "src/example/optional/comparable.cpp",
    "src/example/optional/is_just.cpp",
    "src/example/optional/is_nothing.cpp",
    "src/example/optional/applicative.complex.cpp",
    "src/example/optional/sfinae_friendly_metafunctions.cpp",
    "src/example/optional/monad.cpp",
    "src/example/optional/value_or.cpp",
    "src/example/optional/just.cpp",
    "src/example/optional/value.cpp",
    "src/example/optional/nothing.cpp",
    "src/example/optional/functor.cpp",
    "src/example/optional/sfinae.cpp",
    "src/example/optional/make.cpp",
    "src/example/optional/searchable.cpp",
    "src/example/cppcon_2014/comparable.cpp",
    "src/example/cppcon_2014/ring.cpp",
    "src/example/cppcon_2014/det.cpp",
    "src/example/cppcon_2014/matrix.cpp",
    "src/example/cppcon_2014/functor.cpp",
    "src/example/detail/wrong.cpp",
    "src/example/map/foldable.cpp",
    "src/example/map/to.cpp",
    "src/example/map/comparable.cpp",
    "src/example/map/map.cpp",
    "src/example/map/erase_key.cpp",
    "src/example/map/insert.cpp",
    "src/example/map/values.cpp",
    "src/example/map/keys.cpp",
    "src/example/map/make.cpp",
    "src/example/map/searchable.cpp",
    "src/example/type/metafunction_class.cpp",
    "src/example/type/basic_type.cpp",
    "src/example/type/metafunction.cpp",
    "src/example/type/template.cpp",
    "src/example/type/comparable.cpp",
    "src/example/type/trait.cpp",
    "src/example/type/is_valid.cpp",
    "src/example/type/integral.cpp",
    "src/example/type/alignof.cpp",
    "src/example/type/typeid.cpp",
    "src/example/type/sizeof.cpp",
    "src/example/type/decltype.cpp",
    "src/example/type/make.cpp",
    "src/example/type/hashable.cpp",
    "src/example/basic_tuple/make.cpp",
    "src/example/lazy/comonad.cpp",
    "src/example/lazy/monad.cpp",
    "src/example/lazy/functor.cpp",
    "src/example/lazy/make.cpp",
    "src/example/string/orderable.cpp",
    "src/example/string/foldable.cpp",
    "src/example/string/to.cpp",
    "src/example/string/macro.cpp",
    "src/example/string/comparable.cpp",
    "src/example/string/iterable.cpp",
    "src/example/string/string_c.cpp",
    "src/example/string/monoid.cpp",
    "src/example/string/literal.cpp",
    "src/example/string/make.cpp",
    "src/example/string/searchable.cpp",
    "src/example/string/hashable.cpp",
    "src/example/set/foldable.cpp",
    "src/example/set/to.cpp",
    "src/example/set/comparable.cpp",
    "src/example/set/erase_key.cpp",
    "src/example/set/insert.cpp",
    "src/example/set/make.cpp",
    "src/example/set/searchable.cpp",
    "src/example/sequence/orderable.cpp",
    "src/example/sequence/foldable.cpp",
    "src/example/sequence/applicative.cpp",
    "src/example/sequence/monad_plus.cpp",
    "src/example/sequence/comparable.cpp",
    "src/example/sequence/monad.ints.cpp",
    "src/example/sequence/iterable.cpp",
    "src/example/sequence/monad.types.cpp",
    "src/example/sequence/functor.cpp",
    "src/example/sequence/make.cpp",
    "src/example/sequence/searchable.cpp",
    "src/example/range/foldable.cpp",
    "src/example/range/comparable.cpp",
    "src/example/range/range_c.cpp",
    "src/example/range/iterable.cpp",
    "src/example/range/make.cpp",
    "src/example/range/searchable.cpp",
    "src/example/functional/capture.cpp",
    "src/example/functional/always.cpp",
    "src/example/functional/arg.cpp",
    "src/example/functional/reverse_partial.cpp",
    "src/example/functional/overload.cpp",
    "src/example/functional/flip.cpp",
    "src/example/functional/overload_linearly.cpp",
    "src/example/functional/id.cpp",
    "src/example/functional/lockstep.cpp",
    "src/example/functional/fix.cpp",
    "src/example/functional/placeholder.cpp",
    "src/example/functional/curry.cpp",
    "src/example/functional/apply.cpp",
    "src/example/functional/partial.cpp",
    "src/example/functional/on.cpp",
    "src/example/functional/demux.cpp",
    "src/example/functional/compose.cpp",
    "src/example/functional/infix.cpp",
    "src/example/functional/iterate.cpp",
    "src/example/pair/orderable.cpp",
    "src/example/pair/foldable.cpp",
    "src/example/pair/comparable.cpp",
    "src/example/pair/product.cpp",
    "src/example/pair/make.cpp"
  ],
  "include path": "src/",
  "initialized": true,
  "is external project": true,
  "language": "c++",
  "name": "hana-adapter",
  "standard": "c++17",
  "standards": [
    "c++98",
    "c++11",
    "c++14",
    "c++17"
  ],
  "strict": true,
  "test pattern": "test$",
  "tests": {
    "hana-adapter": [
      "src/test/builtin_array.cpp",
      "src/test/orderable.cpp",
      "src/test/minimal_product.cpp",
      "src/test/comparable.cpp",
      "src/test/lazy.cpp",
      "src/test/ring.cpp",
      "src/test/repeat.cpp",
      "src/test/euclidean_ring.cpp",
      "src/test/functional.cpp",
      "src/test/logical.cpp",
      "src/test/monoid.cpp",
      "src/test/group.cpp",
      "src/test/searchable.cpp"
    ]
  },
  "update": false
}